{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Consumer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst enhancedEvents_1 = require(\"./enhancedEvents\");\nconst errors_1 = require(\"./errors\");\nconst logger = new Logger_1.Logger('Consumer');\nclass Consumer extends enhancedEvents_1.EnhancedEventEmitter {\n  // Id.\n  _id;\n  // Local id.\n  _localId;\n  // Associated Producer id.\n  _producerId;\n  // Closed flag.\n  _closed = false;\n  // Associated RTCRtpReceiver.\n  _rtpReceiver;\n  // Remote track.\n  _track;\n  // RTP parameters.\n  _rtpParameters;\n  // Paused flag.\n  _paused;\n  // App custom data.\n  _appData;\n  // Observer instance.\n  _observer = new enhancedEvents_1.EnhancedEventEmitter();\n  constructor({\n    id,\n    localId,\n    producerId,\n    rtpReceiver,\n    track,\n    rtpParameters,\n    appData\n  }) {\n    super();\n    logger.debug('constructor()');\n    this._id = id;\n    this._localId = localId;\n    this._producerId = producerId;\n    this._rtpReceiver = rtpReceiver;\n    this._track = track;\n    this._rtpParameters = rtpParameters;\n    this._paused = !track.enabled;\n    this._appData = appData ?? {};\n    this.onTrackEnded = this.onTrackEnded.bind(this);\n    this.handleTrack();\n  }\n  /**\r\n   * Consumer id.\r\n   */\n  get id() {\n    return this._id;\n  }\n  /**\r\n   * Local id.\r\n   */\n  get localId() {\n    return this._localId;\n  }\n  /**\r\n   * Associated Producer id.\r\n   */\n  get producerId() {\n    return this._producerId;\n  }\n  /**\r\n   * Whether the Consumer is closed.\r\n   */\n  get closed() {\n    return this._closed;\n  }\n  /**\r\n   * Media kind.\r\n   */\n  get kind() {\n    return this._track.kind;\n  }\n  /**\r\n   * Associated RTCRtpReceiver.\r\n   */\n  get rtpReceiver() {\n    return this._rtpReceiver;\n  }\n  /**\r\n   * The associated track.\r\n   */\n  get track() {\n    return this._track;\n  }\n  /**\r\n   * RTP parameters.\r\n   */\n  get rtpParameters() {\n    return this._rtpParameters;\n  }\n  /**\r\n   * Whether the Consumer is paused.\r\n   */\n  get paused() {\n    return this._paused;\n  }\n  /**\r\n   * App custom data.\r\n   */\n  get appData() {\n    return this._appData;\n  }\n  /**\r\n   * App custom data setter.\r\n   */\n  set appData(appData) {\n    this._appData = appData;\n  }\n  get observer() {\n    return this._observer;\n  }\n  /**\r\n   * Closes the Consumer.\r\n   */\n  close() {\n    if (this._closed) {\n      return;\n    }\n    logger.debug('close()');\n    this._closed = true;\n    this.destroyTrack();\n    this.emit('@close');\n    // Emit observer event.\n    this._observer.safeEmit('close');\n  }\n  /**\r\n   * Transport was closed.\r\n   */\n  transportClosed() {\n    if (this._closed) {\n      return;\n    }\n    logger.debug('transportClosed()');\n    this._closed = true;\n    this.destroyTrack();\n    this.safeEmit('transportclose');\n    // Emit observer event.\n    this._observer.safeEmit('close');\n  }\n  /**\r\n   * Get associated RTCRtpReceiver stats.\r\n   */\n  async getStats() {\n    if (this._closed) {\n      throw new errors_1.InvalidStateError('closed');\n    }\n    return new Promise((resolve, reject) => {\n      this.safeEmit('@getstats', resolve, reject);\n    });\n  }\n  /**\r\n   * Pauses receiving media.\r\n   */\n  pause() {\n    logger.debug('pause()');\n    if (this._closed) {\n      logger.error('pause() | Consumer closed');\n      return;\n    }\n    if (this._paused) {\n      logger.debug('pause() | Consumer is already paused');\n      return;\n    }\n    this._paused = true;\n    this._track.enabled = false;\n    this.emit('@pause');\n    // Emit observer event.\n    this._observer.safeEmit('pause');\n  }\n  /**\r\n   * Resumes receiving media.\r\n   */\n  resume() {\n    logger.debug('resume()');\n    if (this._closed) {\n      logger.error('resume() | Consumer closed');\n      return;\n    }\n    if (!this._paused) {\n      logger.debug('resume() | Consumer is already resumed');\n      return;\n    }\n    this._paused = false;\n    this._track.enabled = true;\n    this.emit('@resume');\n    // Emit observer event.\n    this._observer.safeEmit('resume');\n  }\n  onTrackEnded() {\n    logger.debug('track \"ended\" event');\n    this.safeEmit('trackended');\n    // Emit observer event.\n    this._observer.safeEmit('trackended');\n  }\n  handleTrack() {\n    this._track.addEventListener('ended', this.onTrackEnded);\n  }\n  destroyTrack() {\n    try {\n      this._track.removeEventListener('ended', this.onTrackEnded);\n      this._track.stop();\n    } catch (error) {}\n  }\n}\nexports.Consumer = Consumer;","map":{"version":3,"names":["Object","defineProperty","exports","value","Consumer","Logger_1","require","enhancedEvents_1","errors_1","logger","Logger","EnhancedEventEmitter","_id","_localId","_producerId","_closed","_rtpReceiver","_track","_rtpParameters","_paused","_appData","_observer","constructor","id","localId","producerId","rtpReceiver","track","rtpParameters","appData","debug","enabled","onTrackEnded","bind","handleTrack","closed","kind","paused","observer","close","destroyTrack","emit","safeEmit","transportClosed","getStats","InvalidStateError","Promise","resolve","reject","pause","error","resume","addEventListener","removeEventListener","stop"],"sources":["D:/LECHUAN/NT114/DACN_2/DACN-FE/node_modules/mediasoup-client/lib/Consumer.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Consumer = void 0;\r\nconst Logger_1 = require(\"./Logger\");\r\nconst enhancedEvents_1 = require(\"./enhancedEvents\");\r\nconst errors_1 = require(\"./errors\");\r\nconst logger = new Logger_1.Logger('Consumer');\r\nclass Consumer extends enhancedEvents_1.EnhancedEventEmitter {\r\n    // Id.\r\n    _id;\r\n    // Local id.\r\n    _localId;\r\n    // Associated Producer id.\r\n    _producerId;\r\n    // Closed flag.\r\n    _closed = false;\r\n    // Associated RTCRtpReceiver.\r\n    _rtpReceiver;\r\n    // Remote track.\r\n    _track;\r\n    // RTP parameters.\r\n    _rtpParameters;\r\n    // Paused flag.\r\n    _paused;\r\n    // App custom data.\r\n    _appData;\r\n    // Observer instance.\r\n    _observer = new enhancedEvents_1.EnhancedEventEmitter();\r\n    constructor({ id, localId, producerId, rtpReceiver, track, rtpParameters, appData, }) {\r\n        super();\r\n        logger.debug('constructor()');\r\n        this._id = id;\r\n        this._localId = localId;\r\n        this._producerId = producerId;\r\n        this._rtpReceiver = rtpReceiver;\r\n        this._track = track;\r\n        this._rtpParameters = rtpParameters;\r\n        this._paused = !track.enabled;\r\n        this._appData = appData ?? {};\r\n        this.onTrackEnded = this.onTrackEnded.bind(this);\r\n        this.handleTrack();\r\n    }\r\n    /**\r\n     * Consumer id.\r\n     */\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    /**\r\n     * Local id.\r\n     */\r\n    get localId() {\r\n        return this._localId;\r\n    }\r\n    /**\r\n     * Associated Producer id.\r\n     */\r\n    get producerId() {\r\n        return this._producerId;\r\n    }\r\n    /**\r\n     * Whether the Consumer is closed.\r\n     */\r\n    get closed() {\r\n        return this._closed;\r\n    }\r\n    /**\r\n     * Media kind.\r\n     */\r\n    get kind() {\r\n        return this._track.kind;\r\n    }\r\n    /**\r\n     * Associated RTCRtpReceiver.\r\n     */\r\n    get rtpReceiver() {\r\n        return this._rtpReceiver;\r\n    }\r\n    /**\r\n     * The associated track.\r\n     */\r\n    get track() {\r\n        return this._track;\r\n    }\r\n    /**\r\n     * RTP parameters.\r\n     */\r\n    get rtpParameters() {\r\n        return this._rtpParameters;\r\n    }\r\n    /**\r\n     * Whether the Consumer is paused.\r\n     */\r\n    get paused() {\r\n        return this._paused;\r\n    }\r\n    /**\r\n     * App custom data.\r\n     */\r\n    get appData() {\r\n        return this._appData;\r\n    }\r\n    /**\r\n     * App custom data setter.\r\n     */\r\n    set appData(appData) {\r\n        this._appData = appData;\r\n    }\r\n    get observer() {\r\n        return this._observer;\r\n    }\r\n    /**\r\n     * Closes the Consumer.\r\n     */\r\n    close() {\r\n        if (this._closed) {\r\n            return;\r\n        }\r\n        logger.debug('close()');\r\n        this._closed = true;\r\n        this.destroyTrack();\r\n        this.emit('@close');\r\n        // Emit observer event.\r\n        this._observer.safeEmit('close');\r\n    }\r\n    /**\r\n     * Transport was closed.\r\n     */\r\n    transportClosed() {\r\n        if (this._closed) {\r\n            return;\r\n        }\r\n        logger.debug('transportClosed()');\r\n        this._closed = true;\r\n        this.destroyTrack();\r\n        this.safeEmit('transportclose');\r\n        // Emit observer event.\r\n        this._observer.safeEmit('close');\r\n    }\r\n    /**\r\n     * Get associated RTCRtpReceiver stats.\r\n     */\r\n    async getStats() {\r\n        if (this._closed) {\r\n            throw new errors_1.InvalidStateError('closed');\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            this.safeEmit('@getstats', resolve, reject);\r\n        });\r\n    }\r\n    /**\r\n     * Pauses receiving media.\r\n     */\r\n    pause() {\r\n        logger.debug('pause()');\r\n        if (this._closed) {\r\n            logger.error('pause() | Consumer closed');\r\n            return;\r\n        }\r\n        if (this._paused) {\r\n            logger.debug('pause() | Consumer is already paused');\r\n            return;\r\n        }\r\n        this._paused = true;\r\n        this._track.enabled = false;\r\n        this.emit('@pause');\r\n        // Emit observer event.\r\n        this._observer.safeEmit('pause');\r\n    }\r\n    /**\r\n     * Resumes receiving media.\r\n     */\r\n    resume() {\r\n        logger.debug('resume()');\r\n        if (this._closed) {\r\n            logger.error('resume() | Consumer closed');\r\n            return;\r\n        }\r\n        if (!this._paused) {\r\n            logger.debug('resume() | Consumer is already resumed');\r\n            return;\r\n        }\r\n        this._paused = false;\r\n        this._track.enabled = true;\r\n        this.emit('@resume');\r\n        // Emit observer event.\r\n        this._observer.safeEmit('resume');\r\n    }\r\n    onTrackEnded() {\r\n        logger.debug('track \"ended\" event');\r\n        this.safeEmit('trackended');\r\n        // Emit observer event.\r\n        this._observer.safeEmit('trackended');\r\n    }\r\n    handleTrack() {\r\n        this._track.addEventListener('ended', this.onTrackEnded);\r\n    }\r\n    destroyTrack() {\r\n        try {\r\n            this._track.removeEventListener('ended', this.onTrackEnded);\r\n            this._track.stop();\r\n        }\r\n        catch (error) { }\r\n    }\r\n}\r\nexports.Consumer = Consumer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}